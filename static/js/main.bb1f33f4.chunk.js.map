{"version":3,"sources":["Employees.jsx","EmployeesByMonth.jsx","App.jsx","index.js"],"names":["Employees","props","users","char","handlerButtonClick","handleButtonClickActive","id","event","isActive","target","filteredUsers","Object","keys","filter","user","firstName","charAt","length","map","employeer","className","lastName","onClick","type","name","defaultChecked","EmployeesByMonth","beforeCurrentMonth","afterCurrentMonth","userDob","Date","dob","getMonth","sort","employeerA","employeerB","toDateString","App","alphavit","months","state","error","isLoaded","handleButtonClick","newUsersState","setState","localStorage","setItem","JSON","stringify","result","reduce","acc","item","savedUsers","getItem","savedParsedUsers","parse","this","fetch","then","res","json","parsed","parseResult","currentMonth","sortedMonths","slice","message","month","index","monthsNumber","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb1f33f4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Employees(props) {\r\n    const { users, char, handlerButtonClick } = props;\r\n\r\n    const handleButtonClickActive = (id, event) => {\r\n        handlerButtonClick(\r\n            {\r\n                ...users,\r\n                [id]: {\r\n                    ...users[id],\r\n                    isActive: event.target.id === 'active',\r\n                },\r\n            })\r\n    }\r\n    const filteredUsers = Object.keys(users).filter(user => {\r\n        if (users[user].firstName.charAt(0) === char) {\r\n            return users[user];\r\n        }\r\n    })\r\n\r\n    if (filteredUsers.length) {\r\n        return filteredUsers.map(employeer => {\r\n            return (\r\n                <div key={employeer} id=\"filteredUsers\">\r\n                    <div className={users[employeer].isActive ? 'isActive' : ''}>\r\n                        {users[employeer].firstName} {users[employeer].lastName}\r\n                    </div>\r\n                    <form>\r\n                        <label>\r\n                            <input\r\n                                onClick={(event) => {\r\n                                    handleButtonClickActive(users[employeer].id, event)\r\n                                }}\r\n                                type=\"radio\"\r\n                                id=\"active\"\r\n                                name=\"input\"\r\n                                defaultChecked={users[employeer].isActive}\r\n                            />\r\n                            active\r\n                        </label>\r\n\r\n                        <label>\r\n                            <input\r\n                                onClick={(event) => {\r\n                                    handleButtonClickActive(users[employeer].id, event)\r\n                                }}\r\n                                type=\"radio\"\r\n                                id=\"noactive\"\r\n                                name=\"input\"\r\n                                defaultChecked={!users[employeer].isActive}\r\n                            />\r\n                            not active\r\n                        </label>\r\n                    </form>\r\n                    \r\n                </div>\r\n            )\r\n        })\r\n    } else {\r\n        return <div>No employees</div>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport function EmployeesByMonth(props) {\r\n    const { users, beforeCurrentMonth, afterCurrentMonth } = props;\r\n    const filteredUsers = Object.keys(users).filter(user => {\r\n        const userDob = new Date(users[user].dob).getMonth();\r\n\r\n        if (users[user].isActive\r\n            && (userDob === beforeCurrentMonth || userDob === afterCurrentMonth)) {\r\n            return users[user];\r\n        }\r\n    })\r\n\r\n    if (filteredUsers.length) {\r\n        filteredUsers.sort((employeerA, employeerB) => {\r\n            if (users[employeerA].lastName > users[employeerB].lastName) {\r\n                return 1;\r\n            }\r\n\r\n            if (users[employeerA].lastName < users[employeerB].lastName) {\r\n                return -1;\r\n            }\r\n\r\n            if (users[employeerA].lastName === users[employeerB].lastName) {\r\n                return 0;\r\n            }\r\n        })\r\n\r\n        return filteredUsers.map(employeer => {\r\n            return (\r\n                <div key={employeer} id=\"filteredUsersBirthday\">\r\n                    <div className={users[employeer].isActive && 'isActive'}>\r\n                        {users[employeer].lastName} {users[employeer].firstName} -\r\n                        {new Date(users[employeer].dob).toDateString()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    } else {\r\n        return <div>No employees</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Employees } from './Employees';\r\nimport { EmployeesByMonth } from './EmployeesByMonth';\r\n\r\nexport default class App extends Component {\r\n  alphavit = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  state = {\r\n    error: null,\r\n    isLoaded: false,\r\n    users: {},\r\n  };\r\n\r\n  parseResult(result) {\r\n    return result.reduce((acc, item) => {\r\n      return {\r\n        ...acc,\r\n        [item.id]: { ...item },\r\n      }\r\n    }, {});\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedUsers = localStorage.getItem('users');\r\n\r\n    if (savedUsers) {\r\n      const savedParsedUsers = JSON.parse(savedUsers);\r\n      this.setState({\r\n        isLoaded: true,\r\n        users: savedParsedUsers,\r\n      });\r\n    } else {\r\n      fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            const parsed = this.parseResult(result);\r\n            this.setState({\r\n              isLoaded: true,\r\n              users: parsed,\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  handleButtonClick = (users) => {\r\n    const newUsersState = {\r\n      ...this.state.users,\r\n      ...users,\r\n    }\r\n    this.setState(\r\n      {\r\n        users: newUsersState,\r\n      }\r\n    )\r\n    localStorage.setItem('users', JSON.stringify(newUsersState))\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, users } = this.state;\r\n    const currentMonth = new Date().getMonth();\r\n    const sortedMonths = [...this.months.slice(currentMonth), ...this.months.slice(0, currentMonth)];\r\n\r\n    if (error) {\r\n      return <div>Ошибка: {error.message}</div>\r\n    }\r\n    else if (!isLoaded) {\r\n      return <div>Загрузка...</div>\r\n    }\r\n    else {\r\n      return (\r\n        <>\r\n          <div id=\"headers\">\r\n            <h1 id=\"headerEmployees\">Employees</h1>\r\n            <h1 id=\"headerEmployeesBirthday\">Employees birthday</h1>\r\n          </div>\r\n          <div id=\"wrapper\">\r\n            <div id=\"employeers\">\r\n              {this.alphavit.map(char => {\r\n                return (\r\n                  <div key={char} id=\"charEmployeers\">\r\n                    <div id=\"header\">{char}</div>\r\n                    <div id=\"listEmployeers\">\r\n                      <Employees\r\n                        char={char}\r\n                        handlerButtonClick={this.handleButtonClick}\r\n                        users={users} />\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n            <div id=\"employeersBirthday\"><h2>Months</h2>\r\n              {sortedMonths.map((month, index) => {\r\n                return (\r\n                  <div key={month} id=\"monthEmployeers\">\r\n                    <div id=\"headerMonths\">{month}\r\n                      <div id=\"listEmployeersBirthday\">\r\n                        <EmployeesByMonth\r\n                          beforeCurrentMonth={index - (sortedMonths.length - currentMonth)}\r\n                          afterCurrentMonth={currentMonth + index}\r\n                          month={month}\r\n                          monthsNumber={index}\r\n                          users={users} />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n // buttonClickActive = (users) => {\r\n  //   const usersactive = {\r\n  //     ...this.state.users,\r\n  //     ...users,\r\n  //   }\r\n  //   this.setState({\r\n  //     users: usersactive,\r\n  //   })\r\n  // }","import './styles.css';\r\nimport App from './App.jsx'\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\n\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('App')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}