{"version":3,"sources":["Employees.jsx","EmployeesByMonth.jsx","App.jsx","index.js"],"names":["Employees","props","users","char","handlerButtonClick","handleButtonClickActive","id","event","isActive","target","filteredUsers","Object","keys","filter","user","firstName","charAt","length","map","employeer","className","lastName","onClick","type","name","defaultChecked","EmployeesByMonth","beforeCurrentMonth","afterCurrentMonth","userDob","Date","dob","getMonth","sort","employeerA","employeerB","toDateString","App","alphavit","months","state","error","isLoaded","handleButtonClick","newUsersState","setState","localStorage","setItem","JSON","stringify","handleButtonActiveAllClick","reduce","acc","item","handleButtonNoActiveAllClick","result","savedUsers","getItem","savedParsedUsers","parse","this","fetch","then","res","json","parsed","parseResult","currentMonth","sortedMonths","slice","message","month","index","monthsNumber","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13d95e05.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Employees(props) {\n    const { users, char, handlerButtonClick } = props;\n\n    const handleButtonClickActive = (id, event) => {\n        handlerButtonClick(\n            {\n                ...users,\n                [id]: {\n                    ...users[id],\n                    isActive: event.target.id === 'active',\n                },\n            })\n    }\n    const filteredUsers = Object.keys(users).filter(user => {\n        if (users[user].firstName.charAt(0) === char) {\n            return users[user];\n        }\n    })\n\n    if (filteredUsers.length) {\n        return filteredUsers.map(employeer => {\n            return (\n                <div key={employeer} id=\"filteredUsers\">\n                    <div className={users[employeer].isActive ? 'isActive' : ''}>\n                        {users[employeer].firstName} {users[employeer].lastName}\n                    </div>\n                    <form>\n                        <label>\n                            <input\n                                onClick={(event) => {\n                                    handleButtonClickActive(users[employeer].id, event)\n                                }}\n                                type=\"radio\"\n                                id=\"active\"\n                                name=\"input\"\n                                defaultChecked={users[employeer].isActive}\n                            />\n                            active\n                        </label>\n\n                        <label>\n                            <input\n                                onClick={(event) => {\n                                    handleButtonClickActive(users[employeer].id, event)\n                                }}\n                                type=\"radio\"\n                                id=\"noactive\"\n                                name=\"input\"\n                                defaultChecked={!users[employeer].isActive}\n                            />\n                            not active\n                        </label>\n                    </form>\n                    \n                </div>\n            )\n        })\n    } else {\n        return <div>No employees</div>\n    }\n\n}\n\n\n\n\n\n\n","import React from 'react';\r\n\r\nexport function EmployeesByMonth(props) {\r\n    const { users, beforeCurrentMonth, afterCurrentMonth } = props;\r\n    const filteredUsers = Object.keys(users).filter(user => {\r\n        const userDob = new Date(users[user].dob).getMonth();\r\n\r\n        if (users[user].isActive\r\n            && (userDob === beforeCurrentMonth || userDob === afterCurrentMonth)) {\r\n            return users[user];\r\n        }\r\n    })\r\n\r\n    if (filteredUsers.length) {\r\n        filteredUsers.sort((employeerA, employeerB) => {\r\n            if (users[employeerA].lastName > users[employeerB].lastName) {\r\n                return 1;\r\n            }\r\n\r\n            if (users[employeerA].lastName < users[employeerB].lastName) {\r\n                return -1;\r\n            }\r\n\r\n            if (users[employeerA].lastName === users[employeerB].lastName) {\r\n                return 0;\r\n            }\r\n        })\r\n\r\n        return filteredUsers.map(employeer => {\r\n            return (\r\n                <div key={employeer} id=\"filteredUsersBirthday\">\r\n                    <div className={users[employeer].isActive && 'isActive'}>\r\n                        {users[employeer].lastName} {users[employeer].firstName} -\r\n                        {new Date(users[employeer].dob).toDateString()}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    } else {\r\n        return <div>No employees</div>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport { Employees } from './Employees';\nimport { EmployeesByMonth } from './EmployeesByMonth';\n\nexport default class App extends Component {\n  alphavit = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  state = {\n    error: null,\n    isLoaded: false,\n    users: {},\n  };\n\n  parseResult(result) {\n    return result.reduce((acc, item) => {\n      return {\n        ...acc,\n        [item.id]: { ...item },\n      }\n    }, {});\n  }\n\n  componentDidMount() {\n    const savedUsers = localStorage.getItem('users');\n\n    if (savedUsers) {\n      const savedParsedUsers = JSON.parse(savedUsers);\n      this.setState({\n        isLoaded: true,\n        users: savedParsedUsers,\n      });\n    } else {\n      fetch(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            const parsed = this.parseResult(result);\n            this.setState({\n              isLoaded: true,\n              users: parsed,\n            });\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  }\n\n  handleButtonClick = (users) => {\n    const newUsersState = {\n      ...this.state.users,\n      ...users,\n    }\n    this.setState(\n      {\n        users: newUsersState,\n      }\n    )\n    localStorage.setItem('users', JSON.stringify(newUsersState))\n  }\n\n  handleButtonActiveAllClick = (event) => {\n    const users = Object.keys(this.state.users).reduce((acc, item) => {\n      return {\n        ...acc,\n        [item]: {\n          ...this.state.users[item],\n          isActive: true,\n        }\n      }\n    }, {})\n    this.setState({users})\n  }\n\n\n  handleButtonNoActiveAllClick = (event) => {\n    const users = Object.keys(this.state.users).reduce((acc, item) => {\n      return {\n        ...acc,\n        [item]: {\n          ...this.state.users[item],\n          isActive: false,\n        }\n      }\n    }, {})\n    this.setState({ users })\n  }\n\n\n  render() {\n    const { error, isLoaded, users } = this.state;\n    const currentMonth = new Date().getMonth();\n    const sortedMonths = [...this.months.slice(currentMonth), ...this.months.slice(0, currentMonth)];\n\n    if (error) {\n      return <div>Ошибка: {error.message}</div>\n    }\n    else if (!isLoaded) {\n      return <div>Загрузка...</div>\n    }\n    else {\n      return (\n        <>\n          <div id=\"headers\">\n            <h1 id=\"headerEmployees\">Employees</h1>\n            <h1 id=\"headerEmployeesBirthday\">Employees birthday</h1>\n            <div id=\"buttons\">\n              <button onClick={this.handleButtonActiveAllClick} className=\"button\" id=\"active\">Active</button>\n              <button onClick={this.handleButtonNoActiveAllClick} className=\"button\" id=\"noactive\">No active</button>\n            </div>\n          </div>\n          <div id=\"wrapper\">\n            <div id=\"employeers\">\n              {/* <span><h1>Employees</h1></span> */}\n              {this.alphavit.map(char => {\n                return (\n                  <div key={char} id=\"charEmployeers\">\n                    <div id=\"header\">{char}</div>\n                    <div id=\"listEmployeers\">\n                      <Employees\n                        char={char}\n                        handlerButtonClick={this.handleButtonClick}\n                        users={users} />\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n            <div id=\"employeersBirthday\"><h2>Months</h2>\n              {sortedMonths.map((month, index) => {\n                return (\n                  <div key={month} id=\"monthEmployeers\">\n                    <div id=\"headerMonths\">{month}\n                      <div id=\"listEmployeersBirthday\">\n                        <EmployeesByMonth\n                          beforeCurrentMonth={index - (sortedMonths.length - currentMonth)}\n                          afterCurrentMonth={currentMonth + index}\n                          month={month}\n                          monthsNumber={index}\n                          users={users} />\n                      </div>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n}\n\n // buttonClickActive = (users) => {\n  //   const usersactive = {\n  //     ...this.state.users,\n  //     ...users,\n  //   }\n  //   this.setState({\n  //     users: usersactive,\n  //   })\n  // }","import './styles.css';\nimport App from './App.jsx'\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('App')\n);\n\n\n"],"sourceRoot":""}